using Microsoft.Xrm.Sdk.Metadata;
using NArrange.Core.CodeElements;
using NArrange.CSharp;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;

namespace LandscapeInstitute.Dynamics.IEntityGenerator.Classes
{
    class OptionsetWriter
    {

        public string EntityLogicalName;
        public string OptionsetName;
        public string OutputDirectory;
        public string NameSpace;
        public string OutputFile;

        private string Options;
        private string Body;

        public string DataType;

        public OptionsetWriter(string entityLogicalName, string optionsetName, string outputDirectory, string classNamespace)
        {
            EntityLogicalName = entityLogicalName;

            OptionsetName = optionsetName.Replace(" ","_").ToLower();
            NameSpace = classNamespace;
            OutputDirectory = Path.Combine(outputDirectory, "Optionsets");

            DataType = $"{EntityLogicalName}_{OptionsetName}";

            OutputFile = Path.Combine(OutputDirectory, $"{DataType}.cs");

            Directory.CreateDirectory(OutputDirectory);

            WriteBody();

        }

        public void WriteToFile(string content)
        {
            File.AppendAllText(OutputFile, string.Format("{0}{1}", content, Environment.NewLine));
        }

        private string Content()
        {
            return File.ReadAllText(OutputFile);

        }

        private void WriteBody()
        {

            Body = Body + @"
                //------------------------------------------------------------------------------
                // <auto-generated>
                //     This code was generated by entity generation.
                //
                //     Changes to this file may cause incorrect behavior and will be lost if
                //     the code is regenerated.
                // </auto-generated>
                //------------------------------------------------------------------------------

                using Felinesoft.Framework.Core;
                using Felinesoft.Framework.CoreInterfaces;
                using Felinesoft.Framework.Ecommerce.Models;
                using System;

                namespace " + NameSpace + @"{

                    public enum " + DataType + @" 
                    {
                        {0}
                    }

                }
                ";
        }

        public void AddOption(int key, string value) {

            Options = Options + $"{value.Replace(" ","_")} = {key.ToString()}" + "," + Environment.NewLine;
        }

        public void Generate()
        {

            try
            {
                Options = Options.TrimEnd('\r', '\n');
                Options = Options.TrimEnd(',');
                Body = Body.Replace("{0}", Options);

                StringReader reader = new StringReader(Body);
                CSharpParser parser = new CSharpParser();
                StringWriter writer = new StringWriter();
                CSharpWriter formatter = new CSharpWriter();
                ReadOnlyCollection<ICodeElement> elements = parser.Parse(reader);

                formatter.Write(elements, writer);

                Body = writer.ToString();

                WriteToFile(Body);
            }

           

            catch (Exception ex)
            {

                MessageBox.Show($"{ex.Message}", "Error Generating Optionset, Parse Error", MessageBoxButton.OK, MessageBoxImage.Error);

            }

        }

    }

}